# scanner/vuln_scanner.py

import socket
import requests

# Function to check for open ports
def scan_ports(target, ports):
    print(f"Scanning ports on {target}...")
    for port in ports:
        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as sock:
            sock.settimeout(1)  # Set timeout for this specific socket
            result = sock.connect_ex((target, port))
            if result == 0:
                print(f"Port {port} is open")
            else:
                print(f"Port {port} is closed")

# Function to check for outdated software (basic example)
def check_version(url, known_versions):
    try:
        response = requests.get(url, timeout=3)  # Adding a timeout for the request
        response.raise_for_status()  # Raise an error for bad responses
        version = response.text.strip()  # Example of grabbing version info
        
        if version in known_versions:
            print(f"Software version {version} is outdated!")
        else:
            print(f"Software version {version} is up-to-date.")
    except requests.exceptions.RequestException as e:
        print(f"Failed to reach {url}: {e}")

if __name__ == "__main__":
    target = "127.0.0.1"
    ports_to_scan = [22, 80, 443]
    known_versions = ["1.0.0", "1.1.0"]

    scan_ports(target, ports_to_scan)
    check_version("http://example.com/version", known_versions)
